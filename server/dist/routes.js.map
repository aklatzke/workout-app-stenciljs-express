{"version":3,"sources":["../src/routes.js"],"names":["routes","get","req","res","sendFile","next","title","query","Error","render"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,sBAAf;;AAEA,mBAAUA,MAAV;AACA,qBAAWA,MAAX;AACA,wBAAcA,MAAd;;AAGA;;;AAGAA,OAAOC,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5BA,MAAIC,QAAJ,CAAa,sBAAb;AACD,CAFD;;AAMA;;;;;;;;;AASAJ,OAAOC,GAAP,CAAW,OAAX,EAAoB,CAACC,GAAD,EAAMC,GAAN,EAAWE,IAAX,KAAoB;AACtC,QAAM,EAAEC,KAAF,KAAYJ,IAAIK,KAAtB;;AAEA,MAAID,SAAS,IAAT,IAAiBA,UAAU,EAA/B,EAAmC;AACjC;AACA;AACA;AACA;AACAD,SAAK,IAAIG,KAAJ,CAAU,mCAAV,CAAL;AACA;AACD;;AAEDL,MAAIM,MAAJ,CAAW,OAAX,EAAoB,EAAEH,KAAF,EAApB;AACD,CAbD;;kBAeeN,M","file":"routes.js","sourcesContent":["import { Router } from 'express';\nimport db from './db';\nimport etcRoutes from './routes/etc';\nimport userRoutes from './routes/users';\nimport workoutRoutes from './routes/workouts';\n\nconst routes = Router();\n\netcRoutes(routes, db);\nuserRoutes(routes, db);\nworkoutRoutes(routes, db);\n\n\n/**\n * GET home page\n */\nroutes.get('*', (req, res) => {\n  res.sendFile(\"../../www/index.html\");\n});\n\n\n\n/**\n * GET /list\n *\n * This is a sample route demonstrating\n * a simple approach to error handling and testing\n * the global error handler. You most certainly want to\n * create different/better error handlers depending on\n * your use case.\n */\nroutes.get('/list', (req, res, next) => {\n  const { title } = req.query;\n\n  if (title == null || title === '') {\n    // You probably want to set the response HTTP status to 400 Bad Request\n    // or 422 Unprocessable Entity instead of the default 500 of\n    // the global error handler (e.g check out https://github.com/kbariotis/throw.js).\n    // This is just for demo purposes.\n    next(new Error('The \"title\" parameter is required'));\n    return;\n  }\n\n  res.render('index', { title });\n});\n\nexport default routes;\n"]}